apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ecommerce-web.fullname" . }}
  labels:
    {{- include "ecommerce-web.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "ecommerce-web.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "ecommerce-web.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "ecommerce-web.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: CANONICAL_URL
              value: "https://{{ .Values.hostname }}/"
            - name: OAUTH2_AUTH_URL
              value: "{{ .Values.hydra.public_endpoint }}/oauth2/auth"
            - name: OAUTH2_PUBLIC_LOGOUT_URL
              value: "{{ .Values.hydra.public_endpoint }}/oauth2/sessions/logout"
            - name: OAUTH2_TOKEN_URL
              value: "{{ .Values.hydra.public_endpoint }}/oauth2/token"
            - name: OAUTH2_CLIENT_ID
              value: {{ .Values.ouath2.client_id | quote }}
            - name: OAUTH2_ADMIN_URL
              value: {{ .Values.hydra.admin_endpoint | quote }}
            - name: OAUTH2_CLIENT_SECRET
              value: {{ .Values.ouath2.client_secret | quote }}
            - name: SESSION_SECRET
              value: {{.Values.session.secret | quote }}
            - name: PORT
              value: "80"
            - name: SESSION_MAX_AGE_MS
              value: "2592000000"
            - name: API_URL
              value: {{ .Values.reaction.api_url | quote }}
            {{- if .Values.firebase.enabled }}
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: "/config/service-account"
            - name: FIREBASE_DATABASE_URL
              value: "{{ .Values.firebase.database_url }}"
            {{- end }}
            {{- range $key, $value := .Values.env }}
            - name: {{ $key}}
              value: {{ $value | quote}}
            {{- end }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          volumeMounts:
            - mountPath: /config
              name: firebase
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    
      volumes:
        - name: firebase
          configMap: 
            name: {{ include "ecommerce-web.fullname" . }}